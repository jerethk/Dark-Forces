<HTML>

<HEAD>
   <TITLE>DF Specs - 3DO Files</TITLE>
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#C0C0C0" LINK="#00A000" VLINK="#0000FF" ALINK="#FF0000">

<P><A HREF="file:///A|/df_specs.htm" TARGET="_top"><IMG SRC="gototoc.gif" ALT="[TOC]" HEIGHT=24 WIDTH=22></A><FONT SIZE=+0>
<A HREF="s_wax.htm"><IMG SRC="gotoprev.gif" ALT="[Prev]" HEIGHT=24 WIDTH=22></A>
<A HREF="s_vue.htm"><IMG SRC="gotonext.gif" ALT="[Next]" HEIGHT=24 WIDTH=22></A>
</FONT><B><FONT SIZE=+2>3DO Files</FONT></B><FONT SIZE=+0> </FONT></P>

<P><FONT SIZE=+0>They contain the &quot;3D&quot; objects. (samples : MOUSEBOT,
the DEATH STAR HOLOGRAM, ...) </FONT></P>

<P><FONT SIZE=+0>They are text files containing a geometric description
of a full 3D object, and are converted from 3D Studio .ASC format. They
accept # comments. </FONT></P>

<STRONG>Note: </STRONG>If a 3DO file has an underscore in its name (eg. TB_FAN.3DO)
then you will be able to see other objects through it, even if its polygons even are
filled.

<P><FONT SIZE=+0>[ by Michael Taylor] </FONT></P>

<UL>
<LI><FONT SIZE=+0><A HREF="#fh">File Header</A> </FONT></LI>

<LI><FONT SIZE=+0><A HREF="#od">Object Definitions</A> </FONT></LI>
</UL>

<P>
<HR SIZE=2><A NAME="fh"></A><B><FONT SIZE=+1>3DO Format: Header </FONT></B></P>

<TABLE BORDER=1 WIDTH="600" >
<TR>
<TD>
<PRE>| 3DO 1.2
</PRE>
</TD>
</TR>
</TABLE>

<P><!-- PRE missing slash is voluntary --></P>

<P><FONT SIZE=+0>Magic and Version Number: this is the word &quot;3DO&quot;
followed by a version #, either 1.2, 1.20, or 1.30. </FONT></P>

<P><FONT SIZE=+0>Next comes several lines of header data.<BR>
Included is the picture name, number of objects in the file, number of
vertice, number of polygons, palette used, and number of textures. </FONT></P>

<TABLE BORDER=1 WIDTH="600" >
<TR>
<TD>
<PRE>| 3DONAME  cube
| OBJECTS  00001
| VERTICES 00008
| POLYGONS 00006
| PALETTE  METAL.PAL
</PRE>
</TD>
</TR>
</TABLE>

<P><!-- PRE missing slash is voluntary --></P>

<TABLE BORDER=1 WIDTH="600" >
<TR>
<TD>
<PRE>| TEXTURES 0
</PRE>
</TD>
</TR>
</TABLE>

<P><!-- PRE missing slash is voluntary --></P>

<P><FONT SIZE=+0>or </FONT></P>

<TABLE BORDER=1 WIDTH="600" >
<TR>
<TD>
<PRE>| TEXTURES 1
|   TEXTURE: IPDTENGR.BM
</PRE>
</TD>
</TR>
</TABLE>

<P><!-- PRE missing slash is voluntary --></P>

<P><FONT SIZE=+0>The palette file doesn't appear to relate to any PAL file
found in the GOB directory.<BR>
[Could this be the type of rendering (metal, phong, ...) used in 3DS ?
[Yves]]<BR>
Please note that textures are a little different and will be explained
below. </FONT></P>

<P><FONT SIZE=+0>If any textures are used then below the TEXTURES # line
is additional lines defining each texture file. It creates a zero based
array of textures for later usage by the objects. </FONT></P>

<P>
<HR SIZE=2><A NAME="od"></A><B><FONT SIZE=+1>Object Definitions </FONT></B></P>

<P><FONT SIZE=+0>[ by Michael Taylor] </FONT></P>

<P><FONT SIZE=+0>After the header data comes each object's definition.
Each one starts with an object header and then the data. The object header
is the word &quot;OBJECT&quot; followed by the object's name in double
quotes. The object names seem irrelevant provided they are unique within
the 3DO file. Next is the word &quot;TEXTURE&quot; followed by the texture
used for this object. If no texture is used then the value of -1 is used
else an index into the texture table defined in the header data is given.
</FONT></P>

<TABLE BORDER=1 WIDTH="600" >
<TR>
<TD>
<PRE>| OBJECT &quot;shuttle&quot;
| TEXTURE 0    # Index into texture array
|              # IFOCTGR.BM
</PRE>
</TD>
</TR>
</TABLE>

<P><!-- PRE missing slash is voluntary --></P>

<P><FONT SIZE=+0>After the texture information, starts the actual geometric
description of the object. </FONT></P>

<P><FONT SIZE=+0>First comes the vertices. The initial line is the word
VERTICES followed by the number of vertices defined. Then the vertices
are listed starting with 0 and going up to the number of vertices listed
on the VERTICES line. Each vertex is defined by 3 numbers; x, y, and z.
They represent relative locations on a 3-D graph. They are taken to 3 decimal
places. </FONT></P>

<TABLE BORDER=1 WIDTH="600" >
<TR>
<TD>
<PRE>| VERTICES 8
|    0:   0.000   2.000  -0.050
|    1: -10.000   2.000  -5.550
| ...
</PRE>
</TD>
</TR>
</TABLE>

<P><!-- PRE missing slash is voluntary --></P>

<P><FONT SIZE=+0>After the vertex information, comes the polygonal information.
Each object may be made up of either triangles or quads. The appropriate
header and number of polygons defined are listed, TRIANGLES for triangles
and QUADS for quadrilaterals. The polygons are described with a number
starting at 0, then the vertex number for each end point is given (3 for
triangles and 4 for quadrilaterals). Then a color is given to each polygon
(0 to 255). Finally comes the shading used for each polygon. </FONT></P>

<P><FONT SIZE=+0><B>Note</B> that in order to use a texture for a polygon,
you must set its shading to TEXTURE. </FONT></P>

<P><FONT SIZE=+0>[Here is a list and quick explanation of each of the shading
types: </FONT></P>

<TABLE BORDER=1 CELLPADDING=5 >
<TR>
<TD>FLAT</TD>

<TD>Normal, flat surface</TD>
</TR>

<TR>
<TD>GOURAUD</TD>

<TD>Gouraud shading on surface</TD>
</TR>

<TR>
<TD>VERTEX</TD>

<TD>Display only vertexes of polygon (like Death Star holo)</TD>
</TR>

<TR>
<TD>TEXTURE</TD>

<TD>filled with a texture</TD>
</TR>

<TR>
<TD>GOURTEX</TD>

<TD>filled with a texture, plus gouraud shading on the texture</TD>
</TR>

<TR>
<TD>PLANE</TD>

<TD>texture on a horizontal plane (acts same as floor and ceiling textures
-- must be 64*64, affected by flr and ceil txoffsets, and scrolled by elevators
scroll_floor and scroll_ceiling)</TD>
</TR>
</TABLE>

<P><FONT SIZE=+0>- Jereth] </FONT></P>

<TABLE BORDER=1 WIDTH="600" >
<TR>
<TD>
<PRE>| TRIANGLES 12
| # Num  V1  V2  V3  Color  Shading
|   0:   1   2   3     0     PLANE
|   1:   0   1   3     0     PLANE
|   2:   5   1   0    62     FLAT
| ...  
</PRE>
</TD>
</TR>
</TABLE>

<P><!-- PRE missing slash is voluntary --></P>

<P><FONT SIZE=+0>Also note that the vertices are listed in clockwise order
if you are facing directly at the polygon.<BR>
[This simplifies hidden lines/surfaces algorithm, as you may determine
the facet orientation with 3 of them [Yves]] </FONT></P>

<P><FONT SIZE=+0>[end of Michael's section] </FONT></P>

<P><FONT SIZE=+0>Here is a description of TEXTURE VERTICES and TEXTURE
QUADS/TRIANGLES, which Michael didn't fully cover. </FONT></P>

<P><FONT SIZE=+0>If textures are used (TEXTURE, GOURTEX or PLANE shading),
then texture vertices and texture triangles/quads also needed to be defined.
</FONT></P>

<P><FONT SIZE=+0><B>TEXTURE VERTICES:</B> </FONT></P>

<P><FONT SIZE=+0>These are a set of points defined on an X-Y plane, where
X and Y coordinate values are &gt;=0 and &lt;= 1. These points define relative
positions on the texture being used for the current object, eg. for a 16
x 8 texture, the following </FONT></P>

<TABLE BORDER=1 CELLPADDING=5 >
<TR>
<TH>TEXTURE VERTICE</TH><TD></TD><TD></TD><TD></TD></TR>
<TR><TD>| #</TD><TD>num:</TD><TD>(x)</TD><TD>(y)</TD></TR>
<TR><TD>|</TD><TD>0:</TD><TD>0.5</TD><TD>0.25</TD></TR>
</TABLE>

<P>
<FONT SIZE=+0>....defines a point on the texture at (8, 2) in geometry
units, or (64, 8) in pixels. </FONT></P>

<P><FONT SIZE=+0><B>TEXTURE QUADS / TEXTURE TRIANGLES:<BR>
<BR>
</B>These link texture vertices into a 3 or 4 sided polygon, hence deciding
which portion of the texture is to be placed on the polygon. For example,
if you have an 16 x 8 texture, and the following 4 
</FONT></P>

<TABLE BORDER=1 CELLPADDING=5 >
<TR><TH>TEXTURE VERTICES:</TH><TD></TD><TD></TD></TR>
<TR><TD>| 0:</TD><TD>0.00</TD><TD>0.00</TD></TR>
<TR><TD>| 1:</TD><TD>0.00</TD><TD>0.50</TD></TR>
<TR><TD>| 2:</TD><TD>1.00</TD><TD>0.50</TD></TR>
<TR><TD>| 3:</TD><TD>1.00</TD><TD>0.00</TD></TR>
</TABLE>

<P>
<FONT SIZE=+0>and the following 
<P>


<TABLE BORDER=1 CELLPADDING=5>
<TR><TH>TEXTURE QUAD:</TH><TH></TH></TR>
<TR><TD>| 0:</TD><TD>0</TD><TD>1</TD><TD>2</TD><TD>	3</TD><TD></TD></TR>
</TABLE>
<P>

   
                                ....the bottom half of the texture will be placed onto QUAD 0 of the object (i.e. up to an X value of 16, but only up to a Y value of 4) with the first vertice of the TEXTURE QUAD being placed on the first vertice of the QUAD, the second vertice on the second, and so on. So you can also orientate the portion of texture on the polygon any way you want by keeping the TEXTURE VERTICES pointed to in the same order, but varying the starting vertice, flip it by reversing the order of TEXTURE VERTICES pointed to, or even deform the texture by varying the order of the TEXTURE VERTICES pointed to.
<P>
  
 <TABLE BORDER=1 CELLPADDING=5>
<TR><TD>   |         1: </TD><TD> 2 </TD><TD> 1 </TD><TD> 0   </TD><TD> 3</TD></TR>
</TABLE>
  <P>
In this example, the texture will be flipped horizontally, and be on its side relative to TEXTURE QUAD 0 (the first example).

  <P>
  
Of course, this section of the texture will need to be scaled to cover the whole polygon, so if the polygon is, say, a 64 by 32 rectangular QUAD, the texture will be expanded by a factor of 4 for the above example. If the polygon doesn't have dimensions of the same ratio as the portion of texture, the texture portion will be warped, eg. if the polygon for the above example is shaped like a regular trapezium, the top part of the texture will be squashed and the bottom part stretched.
  <P>
It is okay to point to the same texture vertices over and over again if you for example want to put the same section of a texture on more than one polygon in the object.
  
<P>
<STRONG>Note: </STRONG>TEXTURE VERTICES and TEXTURE QUADS / TRIANGLES are also needed for PLANE fill, although you can't decide what part of a texture is to be placed on a PLANE polygon. Hence the TEXTURE VERTICES pointed to by the TEXTURE QUAD / TRIANGLE are unused.
<P>
  
TEXTURE QUADS / TRIANGLES correspond with the polygons (having TEXTURE, GOURTEX or PLANE fill) that they are linked to. So if QUAD 0 and 2 of an object have a texture fill, but QUAD 1 is just gouraud or flat or otherwise, then TEXTURE QUAD 0 and 2 will be used, but TEXTURE QUAD 1 must also be defined even though it isn't used. So to be economical, you should have all polygons filled with a texture defined first within each object of the 3DO file.
<P>
</BODY>
</HTML>
