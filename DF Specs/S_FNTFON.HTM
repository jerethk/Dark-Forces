<HTML>
<HEAD><TITLE>DF Specs - FONTS</TITLE>
</HEAD>
<BODY BGCOLOR="#C0C0C0" TEXT="#000000" LINK="#00A000" VLINK="#0000FF" ALINK="#FF0000"><BASEFONT SIZE=3>

<A HREF="df_specs.htm" TARGET="_top"><IMG SRC="../images/gototoc.gif" ALT="[TOC]"></A>
<A HREF="s_cmp.htm"><IMG SRC="../images/gotoprev.gif" ALT="[Prev]"></A>
<A HREF="s_bm.htm"><IMG SRC="../images/gotonext.gif" ALT="[Next]"></A>

<FONT SIZE=+2><STRONG> FONT FILES</STRONG></FONT>

<UL>
<LI><A HREF="#FNT Files"> FNT Files</A>
<LI><A HREF="#FONT Res"> FONT Resources (FON Files)</A>
</UL>

<HR SIZE=2>

<A NAME="FNT Files"></A>
<FONT SIZE=+1><STRONG>FNT Files </STRONG></FONT><P>

These files store a proportional character set. FNT files are found in DARK.GOB<BR>
This set may not be complete. The font used to display the ammo, for instance contains only the numbers and the ':' character.
<P>

<TABLE BORDER=1 WIDTH=600><TR><TD><PRE>
FNT_Header IS
{
 Magic            char[4]          // 'FNT' + 15h (21d)
 Height           byte             // Height of the font
 u1               byte             // Unknown
 DataSize         int              // Data after header
 First            byte             // First character in font
 Last             byte             // Last character in font
 pad1             byte[22]         // 22 times 0x00
}
<PRE></TD></TR></TABLE>   <!-- PRE missing slash is voluntary -->
<P>

Then follow the characters. <BR>
There is (Last-First+1) FNT_Character blocks (one per character). 
<P>

<TABLE BORDER=1 WIDTH=600><TR><TD><PRE>
FNT_Character IS
{
 Width            byte             // Width of the character
 Picture          byte[Width*Height] 
                                   // Bytes describing the character,
                                   // by columns from bottom to top
                                   // Each byte is an index in the
                                   // current PAL palette
}
<PRE></TD></TR></TABLE>   <!-- PRE missing slash is voluntary -->
<P>

<HR SIZE=2>

<A NAME="FONT Res"></A>
<FONT SIZE=+1><STRONG>FONT Resources (FON Files)</STRONG></FONT><P>

These LFD resources store a proportional character set, which may be incomplete.<BR>
I found two examples : font6 and font8.
<P>

<STRONG>Note</STRONG><BR>
the .fon extension is a convention adopted by add-on developers when writing conversion programs, there are no real FON files in DARK FORCES. There are FNT files however, which are quite different !
<P>

<TABLE BORDER=1 WIDTH=600><TR><TD><PRE>
FON_Header IS
{
 First            int              // First character in font
 Last             int              // Last character in font
 u1               int              // 8, could be bits per char line
 Height           int              // Height of Chars
 u2               int              // could be average Width
                                   // or the minimal Width to use
 pad1             byte[2]          // 2 times 0x00
}
<PRE></TD></TR></TABLE>   <!-- PRE missing slash is voluntary -->
<P>

Then follows a block of (Last-First+1) bytes (one per character), which code the width of the corresponding character.
<P>

<TABLE BORDER=1 WIDTH=600><TR><TD><PRE>
FON_Characters_Widths IS
{
 Widths           byte[Last-First+1] 
                                   // each byte is the width 
                                   // of one character
}
<PRE></TD></TR></TABLE>   <!-- PRE missing slash is voluntary -->
<P>

Then each character is described in turn:
<P>

<TABLE BORDER=1 WIDTH=600><TR><TD><PRE>
FON_Character IS
{
 Bitmap           Byte[Height]     // Height bytes for each
                                   // character
}
<PRE></TD></TR></TABLE>   <!-- PRE missing slash is voluntary -->
<P>

Now the funny part: each of these bytes is a bitmap representation of a line of the character.<BR>
A bit set correspond to a pixel drawn on the screen.
<P>

For example, if the bytes are 48h, FCh, 48h, FCh, 48h, 00h
this gives
<P>

<TABLE BORDER=1 WIDTH=150><TR><TD><PRE>
 48h   .X..X...
 FCh   XXXXXX..
 48h   .X..X...
 FCh   XXXXXX..
 48h   .X..X...
 00h   ........
<PRE></TD></TR></TABLE>   <!-- PRE missing slash is voluntary -->
<P>

Which is the # character.<BR>

Note that the width as referenced in the FON_Characters_Widths array would be 6 for this character. <BR>
In fact, FON_Characters_Widths must be used to determine where on the screen to draw the next character.
<P>

</BODY>
</HTML>